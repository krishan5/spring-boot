plugins {
	id 'org.springframework.boot' version '2.5.0'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'war'
}

group = 'com.kk'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	implementation 'org.springframework.boot:spring-boot-starter-validation' //We will get validation-api and hibernate-validator jars through this.
	implementation 'org.springframework.boot:spring-boot-starter-hateoas'
	implementation 'org.springframework.boot:spring-boot-starter-actuator' // localhost:8080/actuator
	implementation 'org.springframework.boot:spring-boot-starter-security'
	
	//Helps to explore the APIs in easy way. Instead of using rest api clients, we can use hal-explorer (depends upon the interest of usage)
	//Enter absolute url into it like http://localhost:8080/actuator or http://localhost:8080/users etc, it will provide you all its links like swagger do. 
	implementation 'org.springframework.data:spring-data-rest-hal-explorer' //localhost:8080/explorer
	
	//For content negotiation
	//Just add header "accept" with value "application/xml" to get response in xml format
	//and "application/json" to get response in json format
	implementation group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-xml', version: '2.12.4'
	
	//Swagger openapi UI for presentation of application endpoints : 
	//You can use it by hitting following url :
	// localhost:8080/swagger-ui.html  or
	// localhost:8080/swagger-ui/index.html
	// localhost:8080/v3/api-docs //Swagger specification rebranded to OpenAPI definition
	implementation group: 'org.springdoc', name: 'springdoc-openapi-ui', version: '1.5.9'
	
	runtimeOnly 'com.h2database:h2'
	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
	useJUnitPlatform()
}
